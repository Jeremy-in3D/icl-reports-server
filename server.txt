import * as dotenv from "dotenv";
import * as fs from "fs";
import * as http from "http";
import * as express from "express";
import * as path from "path";
import { BlobServiceClient } from "@azure/storage-blob";
import { fileURLToPath } from "url";
dotenv.config();
// import MongoDB from "./mongodb.js";
// const https = require("https");
// import sampleData from "./assets/test-data.json";
// const mongo = new MongoDB(process.env.MONGO_URI);
const port = process.env.PORT || 8080;

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
app.use(express.static(path.join(__dirname, "dist")));
app.use(express.json());
app.use(express.text());

// app.get("/export-report", (req, res) => {
//   res.send(sampleData);
// });

// app.get("/pull-reports", async (req, res) => {
//   try {
//     const results = await mongo.pullDocs();
//     res.json(results);
//   } catch (e) {
//     res.status(500).send(e);
//   }
// });

// app.post("/search-reports", async (req, res) => {
//   const data = JSON.parse(req.body);
//   try {
//     const results = await mongo.searchDocs(data);
//     res.json(results);
//   } catch (e) {
//     res.status(500).send(e);
//   }
// });

// app.post("/save-report", async (req, res) => {
//   try {
//     await mongo.insertDoc(req.body);
//     res.send("Document Inserted Successfully");
//   } catch (e) {
//     res.status(500).send(e);
//   }
// });

const STORAGE_CONNECTION_STRING =
  process.env.CONNECTION_STRING ||
  "BlobEndpoint=https://iclreports.blob.core.windows.net/;QueueEndpoint=https://iclreports.queue.core.windows.net/;FileEndpoint=https://iclreports.file.core.windows.net/;TableEndpoint=https://iclreports.table.core.windows.net/;SharedAccessSignature=sv=2021-06-08&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2022-11-02T16:44:26Z&st=2022-11-02T08:44:26Z&spr=https,http&sig=i51%2ByquhN6St9VXrOZUMYe%2FGB6JZEThCbczQ8wAjslw%3D";
// Note - Account connection string can only be used in node.
const blobServiceClient = BlobServiceClient.fromConnectionString(
  STORAGE_CONNECTION_STRING
);

(async () => {
  try {
    // await mongo.connect();
    let i = 1;
    for await (const container of blobServiceClient.listContainers()) {
      console.log(`Container ${i++}: ${container.name}`);
    }
    const httpServer = http.createServer(app);
    httpServer.listen(port, () => {
      console.log(`Server is listening on port ${port}`);
    });
  } catch (e) {
    console.log("Error", e);
  }
})();

//Add connection referesh for mongodb

// const privateKey = fs.readFileSync("certs/server.key", "utf8");
// const certificate = fs.readFileSync("certs/server.crt", "utf8");
// const credentials = { key: privateKey, cert: certificate };

//---------------------HTTPS
// const httpsServer = https.createServer(credentials, app);
// httpsServer.listen(port, () => {
//   console.log(`Server is listening on port ${port}`);
// });

// app.get("/", (req, res) => {
//   res.sendFile(path.join(__dirname, "dist/index.html"));
// });

// const uri =
//   "mongodb+srv://in3dtech:in3dtech360@cluster0.9ynclka.mongodb.net/?retryWrites=true&w=majority";
